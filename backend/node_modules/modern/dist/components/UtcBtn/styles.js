'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Container = undefined;

var _taggedTemplateLiteral2 = require('babel-runtime/helpers/taggedTemplateLiteral');

var _taggedTemplateLiteral3 = _interopRequireDefault(_taggedTemplateLiteral2);

var _templateObject = (0, _taggedTemplateLiteral3.default)(['\n  border: solid 1px ', ';\n  border-radius: 0;\n  font-family: ', ';\n  font-size: ', ';\n  font-weight: 700;\n  letter-spacing: 0;\n  line-height: 24px;\n  min-width: 125px;\n  outline: none;\n  padding: 4px 16px;\n  transition: 0.3s;\n  cursor: ', ';\n  pointer-events: ', ';\n  background: ', ';\n  border-color: ', ';\n  color: ', ';\n\n  &:hover {\n    background: ', ';\n    border-color: ', ';\n    color: ', ';\n  }\n\n  &:active {\n    background: ', ';\n    border-color: ', ';\n    color: ', ';\n  }\n'], ['\n  border: solid 1px ', ';\n  border-radius: 0;\n  font-family: ', ';\n  font-size: ', ';\n  font-weight: 700;\n  letter-spacing: 0;\n  line-height: 24px;\n  min-width: 125px;\n  outline: none;\n  padding: 4px 16px;\n  transition: 0.3s;\n  cursor: ', ';\n  pointer-events: ', ';\n  background: ', ';\n  border-color: ', ';\n  color: ', ';\n\n  &:hover {\n    background: ', ';\n    border-color: ', ';\n    color: ', ';\n  }\n\n  &:active {\n    background: ', ';\n    border-color: ', ';\n    color: ', ';\n  }\n']);

var _styledComponents = require('styled-components');

var _styledComponents2 = _interopRequireDefault(_styledComponents);

var _config = require('../../../config');

var _config2 = _interopRequireDefault(_config);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var props = {
  disabled: Boolean,
  lightOutline: Boolean,
  darkOutline: Boolean
};

var Container = exports.Container = (0, _styledComponents2.default)('button', props)(_templateObject, _config2.default.colors.blue[2], _config2.default.fonts.family, _config2.default.fonts.size, function (props) {
  return props.disabled ? 'default' : 'pointer';
}, function (props) {
  return props.disabled ? 'none' : 'auto';
}, function (props) {
  if (props.disabled && props.lightOutline) {
    return 'transparent';
  }
  if (props.disabled && props.darkOutline) {
    return 'transparent';
  }
  if (props.disabled) {
    return _config2.default.colors.gray[6];
  }
  if (props.lightOutline) {
    return 'transparent';
  }
  if (props.darkOutline) {
    return 'transparent';
  }
  return _config2.default.colors.blue[3];
}, function (props) {
  if (props.disabled && props.lightOutline) {
    return _config2.default.colors.gray[4];
  }
  if (props.disabled && props.darkOutline) {
    return _config2.default.colors.gray[6];
  }
  if (props.disabled) {
    return _config2.default.colors.gray[6];
  }
  if (props.lightOutline) {
    return _config2.default.colors.white;
  }
  if (props.darkOutline) {
    return _config2.default.colors.gray[5];
  }
  return _config2.default.colors.blue[3];
}, function (props) {
  if (props.disabled && props.lightOutline) {
    return _config2.default.colors.gray[4];
  }
  if (props.disabled && props.darkOutline) {
    return _config2.default.colors.gray[3];
  }
  if (props.disabled) {
    return _config2.default.colors.white;
  }
  if (props.lightOutline) {
    return _config2.default.colors.white;
  }
  if (props.darkOutline) {
    return _config2.default.colors.gray[5];
  }
  return _config2.default.colors.white;
}, function (props) {
  if (props.lightOutline) {
    return _config2.default.colors.white;
  } else if (props.darkOutline) {
    return _config2.default.colors.gray[5];
  } else {
    return _config2.default.colors.blue[2];
  }
}, function (props) {
  if (props.lightOutline) {
    return _config2.default.colors.white;
  } else if (props.darkOutline) {
    return _config2.default.colors.gray[5];
  } else {
    return _config2.default.colors.blue[2];
  }
}, function (props) {
  if (props.lightOutline) {
    return _config2.default.colors.gray[5];
  } else if (props.darkOutline) {
    return _config2.default.colors.white;
  } else {
    return _config2.default.colors.white;
  }
}, function (props) {
  if (props.lightOutline) {
    return _config2.default.colors.gray[1];
  } else if (props.darkOutline) {
    return _config2.default.colors.black;
  } else {
    return _config2.default.colors.blue[4];
  }
}, function (props) {
  if (props.lightOutline) {
    return _config2.default.colors.gray[1];
  } else if (props.darkOutline) {
    return _config2.default.colors.black;
  } else {
    return _config2.default.colors.blue[4];
  }
}, function (props) {
  if (props.lightOutline) {
    return _config2.default.colors.gray[5];
  } else if (props.darkOutline) {
    return _config2.default.colors.white;
  } else {
    return _config2.default.colors.white;
  }
});